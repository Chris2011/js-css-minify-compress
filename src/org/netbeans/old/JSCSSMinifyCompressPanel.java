/**
 * Copyright [2013] Gaurav Gupta
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package org.netbeans.old;

class JSCSSMinifyCompressPanel extends javax.swing.JPanel {

    public final JSCSSMinifyCompressOptionsPanelController controller;

    public JSCSSMinifyCompressPanel(JSCSSMinifyCompressOptionsPanelController controller) {
        this.controller = controller;
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minifierTabPane = new javax.swing.JTabbedPane();
        javaScriptTabPanel = new javax.swing.JPanel();
        newJSFile1 = new javax.swing.JCheckBox();
        jsObfuscate1 = new javax.swing.JCheckBox();
        preExtensionJS_Label1 = new javax.swing.JLabel();
        separatorJS_Label1 = new javax.swing.JLabel();
        preExtensionJS1 = new javax.swing.JTextField();
        separatorJS1 = new javax.swing.JTextField();
        autoMinifyJS1 = new javax.swing.JCheckBox();
        headerPaneJS1 = new javax.swing.JLayeredPane();
        headerLabelJS1 = new javax.swing.JLabel();
        headerScrollPaneJS1 = new javax.swing.JScrollPane();
        headerEditorPaneJS1 = new javax.swing.JEditorPane();
        cssTabPanel = new javax.swing.JPanel();
        newCSSFile1 = new javax.swing.JCheckBox();
        preExtensionCSS_Label1 = new javax.swing.JLabel();
        separatorCSS_Label1 = new javax.swing.JLabel();
        preExtensionCSS1 = new javax.swing.JTextField();
        separatorCSS1 = new javax.swing.JTextField();
        autoMinifyCSS1 = new javax.swing.JCheckBox();
        headerPaneCSS1 = new javax.swing.JLayeredPane();
        headerLabelCSS1 = new javax.swing.JLabel();
        headerScrollPaneCSS1 = new javax.swing.JScrollPane();
        headerEditorPaneCSS1 = new javax.swing.JEditorPane();
        htmlTabPanel = new javax.swing.JPanel();
        newHTMLFile = new javax.swing.JCheckBox();
        preExtensionHTML_Label = new javax.swing.JLabel();
        separatorHTML_Label = new javax.swing.JLabel();
        preExtensionHTML = new javax.swing.JTextField();
        separatorHTML = new javax.swing.JTextField();
        buildInternalJSMinify = new javax.swing.JCheckBox();
        buildInternalCSSMinify = new javax.swing.JCheckBox();
        autoMinifyHTML = new javax.swing.JCheckBox();
        headerPaneHTML = new javax.swing.JLayeredPane();
        headerLabelHTML = new javax.swing.JLabel();
        headerScrollPaneHTML = new javax.swing.JScrollPane();
        headerEditorPaneHTML = new javax.swing.JEditorPane();
        xmlTabPanel = new javax.swing.JPanel();
        newXMLFile = new javax.swing.JCheckBox();
        preExtensionXML_Label = new javax.swing.JLabel();
        separatorXML_Label = new javax.swing.JLabel();
        preExtensionXML = new javax.swing.JTextField();
        separatorXML = new javax.swing.JTextField();
        autoMinifyXML = new javax.swing.JCheckBox();
        headerPaneXML = new javax.swing.JLayeredPane();
        headerLabelXML = new javax.swing.JLabel();
        headerScrollPaneXML = new javax.swing.JScrollPane();
        headerEditorPaneXML = new javax.swing.JEditorPane();
        jsonTabPanel = new javax.swing.JPanel();
        newJSONFile = new javax.swing.JCheckBox();
        preExtensionJSON_Label = new javax.swing.JLabel();
        separatorJSON_Label = new javax.swing.JLabel();
        preExtensionJSON = new javax.swing.JTextField();
        separatorJSON = new javax.swing.JTextField();
        autoMinifyJSON = new javax.swing.JCheckBox();
        headerPaneJSON = new javax.swing.JLayeredPane();
        headerLabelJSON = new javax.swing.JLabel();
        headerScrollPaneJSON = new javax.swing.JScrollPane();
        headerEditorPaneJSON = new javax.swing.JEditorPane();
        projectBuildTabPanel = new javax.swing.JPanel();
        jLayeredPane6 = new javax.swing.JLayeredPane();
        separatBuild = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        buildJSMinify = new javax.swing.JCheckBox();
        buildCSSMinify = new javax.swing.JCheckBox();
        skipPreExtensionJS = new javax.swing.JCheckBox();
        skipPreExtensionCSS = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        buildHTMLMinify = new javax.swing.JCheckBox();
        skipPreExtensionHTML = new javax.swing.JCheckBox();
        buildXMLMinify = new javax.swing.JCheckBox();
        skipPreExtensionXML = new javax.swing.JCheckBox();
        buildJSONMinify = new javax.swing.JCheckBox();
        skipPreExtensionJSON = new javax.swing.JCheckBox();
        jLayeredPane8 = new javax.swing.JLayeredPane();
        addLogToFile = new javax.swing.JCheckBox();
        enableOutputLogAlert = new javax.swing.JCheckBox();
        jLayeredPane10 = new javax.swing.JLayeredPane();
        enableShortKeyAction = new javax.swing.JCheckBox();
        enableShortKeyActionConfirmBox = new javax.swing.JCheckBox();

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setPreferredSize(new java.awt.Dimension(710, 430));

        minifierTabPane.setPreferredSize(new java.awt.Dimension(30, 30));

        newJSFile1.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(newJSFile1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newJSFile1.text")); // NOI18N
        newJSFile1.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newJSFile1.toolTipText")); // NOI18N
        newJSFile1.setOpaque(false);

        jsObfuscate1.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jsObfuscate1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.jsObfuscate1.text")); // NOI18N
        jsObfuscate1.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(preExtensionJS_Label1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionJS_Label1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(separatorJS_Label1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorJS_Label1.text")); // NOI18N

        preExtensionJS1.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionJS1.text")); // NOI18N

        separatorJS1.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorJS1.text")); // NOI18N
        separatorJS1.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorJS1.toolTipText")); // NOI18N

        autoMinifyJS1.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(autoMinifyJS1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.autoMinifyJS1.text")); // NOI18N
        autoMinifyJS1.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelJS1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerLabelJS1.text")); // NOI18N

        headerEditorPaneJS1.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerEditorPaneJS1.toolTipText")); // NOI18N
        headerScrollPaneJS1.setViewportView(headerEditorPaneJS1);

        headerPaneJS1.setLayer(headerLabelJS1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        headerPaneJS1.setLayer(headerScrollPaneJS1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout headerPaneJS1Layout = new javax.swing.GroupLayout(headerPaneJS1);
        headerPaneJS1.setLayout(headerPaneJS1Layout);
        headerPaneJS1Layout.setHorizontalGroup(
            headerPaneJS1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneJS1Layout.createSequentialGroup()
                .addComponent(headerLabelJS1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(headerScrollPaneJS1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerPaneJS1Layout.setVerticalGroup(
            headerPaneJS1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneJS1Layout.createSequentialGroup()
                .addComponent(headerLabelJS1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(headerScrollPaneJS1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout javaScriptTabPanelLayout = new javax.swing.GroupLayout(javaScriptTabPanel);
        javaScriptTabPanel.setLayout(javaScriptTabPanelLayout);
        javaScriptTabPanelLayout.setHorizontalGroup(
            javaScriptTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javaScriptTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(javaScriptTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(autoMinifyJS1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javaScriptTabPanelLayout.createSequentialGroup()
                        .addComponent(newJSFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preExtensionJS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preExtensionJS1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javaScriptTabPanelLayout.createSequentialGroup()
                        .addComponent(jsObfuscate1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(separatorJS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(separatorJS1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(headerPaneJS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(322, Short.MAX_VALUE))
        );
        javaScriptTabPanelLayout.setVerticalGroup(
            javaScriptTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javaScriptTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoMinifyJS1)
                .addGap(18, 18, 18)
                .addGroup(javaScriptTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javaScriptTabPanelLayout.createSequentialGroup()
                        .addComponent(newJSFile1)
                        .addGap(0, 0, 0)
                        .addGroup(javaScriptTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jsObfuscate1)
                            .addComponent(separatorJS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(separatorJS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javaScriptTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(preExtensionJS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(preExtensionJS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(headerPaneJS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        minifierTabPane.addTab(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.javaScriptTabPanel.TabConstraints.tabTitle"), javaScriptTabPanel); // NOI18N

        newCSSFile1.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(newCSSFile1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newCSSFile1.text")); // NOI18N
        newCSSFile1.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newCSSFile1.toolTipText")); // NOI18N
        newCSSFile1.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(preExtensionCSS_Label1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionCSS_Label1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(separatorCSS_Label1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorCSS_Label1.text")); // NOI18N

        preExtensionCSS1.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionCSS1.text")); // NOI18N

        separatorCSS1.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorCSS1.text")); // NOI18N
        separatorCSS1.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorCSS1.toolTipText")); // NOI18N

        autoMinifyCSS1.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(autoMinifyCSS1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.autoMinifyCSS1.text")); // NOI18N
        autoMinifyCSS1.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelCSS1, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerLabelCSS1.text")); // NOI18N

        headerEditorPaneCSS1.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerEditorPaneCSS1.toolTipText")); // NOI18N
        headerScrollPaneCSS1.setViewportView(headerEditorPaneCSS1);

        headerPaneCSS1.setLayer(headerLabelCSS1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        headerPaneCSS1.setLayer(headerScrollPaneCSS1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout headerPaneCSS1Layout = new javax.swing.GroupLayout(headerPaneCSS1);
        headerPaneCSS1.setLayout(headerPaneCSS1Layout);
        headerPaneCSS1Layout.setHorizontalGroup(
            headerPaneCSS1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneCSS1Layout.createSequentialGroup()
                .addComponent(headerLabelCSS1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(headerScrollPaneCSS1))
        );
        headerPaneCSS1Layout.setVerticalGroup(
            headerPaneCSS1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneCSS1Layout.createSequentialGroup()
                .addComponent(headerLabelCSS1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(headerScrollPaneCSS1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout cssTabPanelLayout = new javax.swing.GroupLayout(cssTabPanel);
        cssTabPanel.setLayout(cssTabPanelLayout);
        cssTabPanelLayout.setHorizontalGroup(
            cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cssTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(cssTabPanelLayout.createSequentialGroup()
                            .addComponent(newCSSFile1)
                            .addGap(18, 18, 18)
                            .addGroup(cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(cssTabPanelLayout.createSequentialGroup()
                                    .addComponent(preExtensionCSS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(preExtensionCSS1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(cssTabPanelLayout.createSequentialGroup()
                                    .addComponent(separatorCSS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(separatorCSS1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(headerPaneCSS1))
                    .addComponent(autoMinifyCSS1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        cssTabPanelLayout.setVerticalGroup(
            cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cssTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoMinifyCSS1)
                .addGap(18, 18, 18)
                .addGroup(cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCSSFile1)
                    .addComponent(preExtensionCSS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preExtensionCSS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cssTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(separatorCSS_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(separatorCSS1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(headerPaneCSS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        minifierTabPane.addTab(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.cssTabPanel.TabConstraints.tabTitle"), cssTabPanel); // NOI18N

        newHTMLFile.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(newHTMLFile, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newHTMLFile.text")); // NOI18N
        newHTMLFile.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newHTMLFile.toolTipText")); // NOI18N
        newHTMLFile.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(preExtensionHTML_Label, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionHTML_Label.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(separatorHTML_Label, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorHTML_Label.text")); // NOI18N

        preExtensionHTML.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionHTML.text")); // NOI18N

        separatorHTML.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorHTML.text")); // NOI18N
        separatorHTML.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorHTML.toolTipText")); // NOI18N

        buildInternalJSMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildInternalJSMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildInternalJSMinify.text")); // NOI18N
        buildInternalJSMinify.setOpaque(false);

        buildInternalCSSMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildInternalCSSMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildInternalCSSMinify.text")); // NOI18N
        buildInternalCSSMinify.setOpaque(false);

        autoMinifyHTML.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(autoMinifyHTML, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.autoMinifyHTML.text")); // NOI18N
        autoMinifyHTML.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelHTML, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerLabelHTML.text")); // NOI18N

        headerEditorPaneHTML.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerEditorPaneHTML.toolTipText")); // NOI18N
        headerScrollPaneHTML.setViewportView(headerEditorPaneHTML);

        headerPaneHTML.setLayer(headerLabelHTML, javax.swing.JLayeredPane.DEFAULT_LAYER);
        headerPaneHTML.setLayer(headerScrollPaneHTML, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout headerPaneHTMLLayout = new javax.swing.GroupLayout(headerPaneHTML);
        headerPaneHTML.setLayout(headerPaneHTMLLayout);
        headerPaneHTMLLayout.setHorizontalGroup(
            headerPaneHTMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneHTMLLayout.createSequentialGroup()
                .addComponent(headerLabelHTML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(headerScrollPaneHTML, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerPaneHTMLLayout.setVerticalGroup(
            headerPaneHTMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneHTMLLayout.createSequentialGroup()
                .addComponent(headerLabelHTML)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(headerScrollPaneHTML, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout htmlTabPanelLayout = new javax.swing.GroupLayout(htmlTabPanel);
        htmlTabPanel.setLayout(htmlTabPanelLayout);
        htmlTabPanelLayout.setHorizontalGroup(
            htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(htmlTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(autoMinifyHTML, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(htmlTabPanelLayout.createSequentialGroup()
                        .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newHTMLFile, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buildInternalJSMinify, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preExtensionHTML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(htmlTabPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(separatorHTML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(separatorHTML, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(preExtensionHTML, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(buildInternalCSSMinify, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerPaneHTML, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        htmlTabPanelLayout.setVerticalGroup(
            htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(htmlTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoMinifyHTML)
                .addGap(18, 18, 18)
                .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(htmlTabPanelLayout.createSequentialGroup()
                        .addComponent(newHTMLFile)
                        .addGap(0, 0, 0)
                        .addComponent(buildInternalJSMinify)
                        .addGap(0, 0, 0)
                        .addComponent(buildInternalCSSMinify))
                    .addGroup(htmlTabPanelLayout.createSequentialGroup()
                        .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preExtensionHTML, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(preExtensionHTML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(htmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(separatorHTML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(separatorHTML, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(headerPaneHTML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        minifierTabPane.addTab(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.htmlTabPanel.TabConstraints.tabTitle"), htmlTabPanel); // NOI18N

        newXMLFile.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(newXMLFile, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newXMLFile.text")); // NOI18N
        newXMLFile.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newXMLFile.toolTipText")); // NOI18N
        newXMLFile.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(preExtensionXML_Label, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionXML_Label.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(separatorXML_Label, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorXML_Label.text")); // NOI18N

        preExtensionXML.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionXML.text")); // NOI18N

        separatorXML.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorXML.text")); // NOI18N
        separatorXML.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorXML.toolTipText")); // NOI18N

        autoMinifyXML.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(autoMinifyXML, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.autoMinifyXML.text")); // NOI18N
        autoMinifyXML.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelXML, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerLabelXML.text")); // NOI18N

        headerEditorPaneXML.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerEditorPaneXML.toolTipText")); // NOI18N
        headerScrollPaneXML.setViewportView(headerEditorPaneXML);

        headerPaneXML.setLayer(headerLabelXML, javax.swing.JLayeredPane.DEFAULT_LAYER);
        headerPaneXML.setLayer(headerScrollPaneXML, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout headerPaneXMLLayout = new javax.swing.GroupLayout(headerPaneXML);
        headerPaneXML.setLayout(headerPaneXMLLayout);
        headerPaneXMLLayout.setHorizontalGroup(
            headerPaneXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneXMLLayout.createSequentialGroup()
                .addComponent(headerLabelXML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(headerScrollPaneXML))
        );
        headerPaneXMLLayout.setVerticalGroup(
            headerPaneXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneXMLLayout.createSequentialGroup()
                .addComponent(headerLabelXML)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(headerScrollPaneXML, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout xmlTabPanelLayout = new javax.swing.GroupLayout(xmlTabPanel);
        xmlTabPanel.setLayout(xmlTabPanelLayout);
        xmlTabPanelLayout.setHorizontalGroup(
            xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xmlTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(autoMinifyXML, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(xmlTabPanelLayout.createSequentialGroup()
                        .addComponent(newXMLFile)
                        .addGap(56, 56, 56)
                        .addGroup(xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(xmlTabPanelLayout.createSequentialGroup()
                                .addComponent(preExtensionXML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(preExtensionXML, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(xmlTabPanelLayout.createSequentialGroup()
                                .addComponent(separatorXML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(separatorXML, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(headerPaneXML))
                .addGap(292, 292, 292))
        );
        xmlTabPanelLayout.setVerticalGroup(
            xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xmlTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoMinifyXML)
                .addGap(18, 18, 18)
                .addGroup(xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newXMLFile)
                    .addGroup(xmlTabPanelLayout.createSequentialGroup()
                        .addGroup(xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preExtensionXML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(preExtensionXML, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(xmlTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(separatorXML_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(separatorXML, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49)
                .addComponent(headerPaneXML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        minifierTabPane.addTab(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.xmlTabPanel.TabConstraints.tabTitle"), xmlTabPanel); // NOI18N

        newJSONFile.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(newJSONFile, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newJSONFile.text")); // NOI18N
        newJSONFile.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.newJSONFile.toolTipText")); // NOI18N
        newJSONFile.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(preExtensionJSON_Label, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionJSON_Label.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(separatorJSON_Label, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorJSON_Label.text")); // NOI18N

        preExtensionJSON.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.preExtensionJSON.text")); // NOI18N

        separatorJSON.setText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorJSON.text")); // NOI18N
        separatorJSON.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatorJSON.toolTipText")); // NOI18N

        autoMinifyJSON.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(autoMinifyJSON, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.autoMinifyJSON.text")); // NOI18N
        autoMinifyJSON.setOpaque(false);

        org.openide.awt.Mnemonics.setLocalizedText(headerLabelJSON, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerLabelJSON.text")); // NOI18N

        headerEditorPaneJSON.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.headerEditorPaneJSON.toolTipText")); // NOI18N
        headerScrollPaneJSON.setViewportView(headerEditorPaneJSON);

        headerPaneJSON.setLayer(headerLabelJSON, javax.swing.JLayeredPane.DEFAULT_LAYER);
        headerPaneJSON.setLayer(headerScrollPaneJSON, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout headerPaneJSONLayout = new javax.swing.GroupLayout(headerPaneJSON);
        headerPaneJSON.setLayout(headerPaneJSONLayout);
        headerPaneJSONLayout.setHorizontalGroup(
            headerPaneJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneJSONLayout.createSequentialGroup()
                .addComponent(headerLabelJSON)
                .addGap(18, 18, 18)
                .addComponent(headerScrollPaneJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerPaneJSONLayout.setVerticalGroup(
            headerPaneJSONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPaneJSONLayout.createSequentialGroup()
                .addComponent(headerLabelJSON)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(headerScrollPaneJSON, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jsonTabPanelLayout = new javax.swing.GroupLayout(jsonTabPanel);
        jsonTabPanel.setLayout(jsonTabPanelLayout);
        jsonTabPanelLayout.setHorizontalGroup(
            jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jsonTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(autoMinifyJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jsonTabPanelLayout.createSequentialGroup()
                        .addComponent(newJSONFile, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jsonTabPanelLayout.createSequentialGroup()
                                .addComponent(preExtensionJSON_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(preExtensionJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jsonTabPanelLayout.createSequentialGroup()
                                .addComponent(separatorJSON_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separatorJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(headerPaneJSON, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addGap(292, 292, 292))
        );
        jsonTabPanelLayout.setVerticalGroup(
            jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jsonTabPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(autoMinifyJSON)
                .addGap(18, 18, 18)
                .addGroup(jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newJSONFile)
                    .addGroup(jsonTabPanelLayout.createSequentialGroup()
                        .addGroup(jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(preExtensionJSON_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(preExtensionJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jsonTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(separatorJSON_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(separatorJSON, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(headerPaneJSON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        minifierTabPane.addTab(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.jsonTabPanel.TabConstraints.tabTitle"), jsonTabPanel); // NOI18N

        separatBuild.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(separatBuild, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatBuild.text")); // NOI18N
        separatBuild.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatBuild.toolTipText")); // NOI18N
        separatBuild.setActionCommand(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.separatBuild.actionCommand")); // NOI18N
        separatBuild.setOpaque(false);
        jLayeredPane6.add(separatBuild);
        separatBuild.setBounds(50, 40, 193, 24);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.jLabel7.text")); // NOI18N
        jLayeredPane6.add(jLabel7);
        jLabel7.setBounds(50, 80, 292, 13);

        buildJSMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildJSMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildJSMinify.text")); // NOI18N
        buildJSMinify.setOpaque(false);
        jLayeredPane6.add(buildJSMinify);
        buildJSMinify.setBounds(50, 100, 110, 24);

        buildCSSMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildCSSMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildCSSMinify.text")); // NOI18N
        buildCSSMinify.setOpaque(false);
        jLayeredPane6.add(buildCSSMinify);
        buildCSSMinify.setBounds(50, 130, 140, 24);

        skipPreExtensionJS.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(skipPreExtensionJS, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionJS.text")); // NOI18N
        skipPreExtensionJS.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionJS.toolTipText")); // NOI18N
        skipPreExtensionJS.setOpaque(false);
        jLayeredPane6.add(skipPreExtensionJS);
        skipPreExtensionJS.setBounds(250, 100, 300, 24);

        skipPreExtensionCSS.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(skipPreExtensionCSS, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionCSS.text")); // NOI18N
        skipPreExtensionCSS.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionCSS.toolTipText")); // NOI18N
        skipPreExtensionCSS.setOpaque(false);
        jLayeredPane6.add(skipPreExtensionCSS);
        skipPreExtensionCSS.setBounds(250, 130, 300, 24);

        jLabel6.setForeground(new java.awt.Color(102, 102, 255));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.jLabel6.text")); // NOI18N
        jLayeredPane6.add(jLabel6);
        jLabel6.setBounds(230, 10, 260, 16);

        buildHTMLMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildHTMLMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildHTMLMinify.text")); // NOI18N
        buildHTMLMinify.setOpaque(false);
        jLayeredPane6.add(buildHTMLMinify);
        buildHTMLMinify.setBounds(50, 160, 170, 24);

        skipPreExtensionHTML.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(skipPreExtensionHTML, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionHTML.text")); // NOI18N
        skipPreExtensionHTML.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionHTML.toolTipText")); // NOI18N
        skipPreExtensionHTML.setOpaque(false);
        jLayeredPane6.add(skipPreExtensionHTML);
        skipPreExtensionHTML.setBounds(250, 160, 310, 24);

        buildXMLMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildXMLMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildXMLMinify.text")); // NOI18N
        buildXMLMinify.setOpaque(false);
        jLayeredPane6.add(buildXMLMinify);
        buildXMLMinify.setBounds(50, 190, 90, 24);

        skipPreExtensionXML.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(skipPreExtensionXML, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionXML.text")); // NOI18N
        skipPreExtensionXML.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionXML.toolTipText")); // NOI18N
        skipPreExtensionXML.setOpaque(false);
        jLayeredPane6.add(skipPreExtensionXML);
        skipPreExtensionXML.setBounds(250, 190, 320, 24);

        buildJSONMinify.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(buildJSONMinify, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.buildJSONMinify.text")); // NOI18N
        buildJSONMinify.setOpaque(false);
        jLayeredPane6.add(buildJSONMinify);
        buildJSONMinify.setBounds(50, 220, 170, 24);

        skipPreExtensionJSON.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(skipPreExtensionJSON, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionJSON.text")); // NOI18N
        skipPreExtensionJSON.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.skipPreExtensionJSON.toolTipText")); // NOI18N
        skipPreExtensionJSON.setOpaque(false);
        jLayeredPane6.add(skipPreExtensionJSON);
        skipPreExtensionJSON.setBounds(250, 220, 310, 24);

        jLayeredPane8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.jLayeredPane8.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        addLogToFile.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(addLogToFile, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.addLogToFile.text")); // NOI18N
        addLogToFile.setOpaque(false);
        jLayeredPane8.add(addLogToFile);
        addLogToFile.setBounds(10, 20, 280, 24);

        enableOutputLogAlert.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(enableOutputLogAlert, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.enableOutputLogAlert.text")); // NOI18N
        enableOutputLogAlert.setOpaque(false);
        jLayeredPane8.add(enableOutputLogAlert);
        enableOutputLogAlert.setBounds(10, 40, 390, 24);

        jLayeredPane10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.jLayeredPane10.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        enableShortKeyAction.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(enableShortKeyAction, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.enableShortKeyAction.text")); // NOI18N
        enableShortKeyAction.setOpaque(false);
        jLayeredPane10.add(enableShortKeyAction);
        enableShortKeyAction.setBounds(10, 20, 280, 20);

        enableShortKeyActionConfirmBox.setBackground(new java.awt.Color(255, 255, 255));
        org.openide.awt.Mnemonics.setLocalizedText(enableShortKeyActionConfirmBox, org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.enableShortKeyActionConfirmBox.text")); // NOI18N
        enableShortKeyActionConfirmBox.setToolTipText(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.enableShortKeyActionConfirmBox.toolTipText")); // NOI18N
        enableShortKeyActionConfirmBox.setOpaque(false);
        jLayeredPane10.add(enableShortKeyActionConfirmBox);
        enableShortKeyActionConfirmBox.setBounds(10, 40, 343, 20);

        javax.swing.GroupLayout projectBuildTabPanelLayout = new javax.swing.GroupLayout(projectBuildTabPanel);
        projectBuildTabPanel.setLayout(projectBuildTabPanelLayout);
        projectBuildTabPanelLayout.setHorizontalGroup(
            projectBuildTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 708, Short.MAX_VALUE)
            .addGroup(projectBuildTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(projectBuildTabPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(projectBuildTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLayeredPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(projectBuildTabPanelLayout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addGroup(projectBuildTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLayeredPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLayeredPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        projectBuildTabPanelLayout.setVerticalGroup(
            projectBuildTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
            .addGroup(projectBuildTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(projectBuildTabPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLayeredPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jLayeredPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jLayeredPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        minifierTabPane.addTab(org.openide.util.NbBundle.getMessage(JSCSSMinifyCompressPanel.class, "JSCSSMinifyCompressPanel.projectBuildTabPanel.TabConstraints.tabTitle"), projectBuildTabPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(minifierTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(minifierTabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox addLogToFile;
    public javax.swing.JCheckBox autoMinifyCSS1;
    public javax.swing.JCheckBox autoMinifyHTML;
    public javax.swing.JCheckBox autoMinifyJS1;
    public javax.swing.JCheckBox autoMinifyJSON;
    public javax.swing.JCheckBox autoMinifyXML;
    public javax.swing.JCheckBox buildCSSMinify;
    public javax.swing.JCheckBox buildHTMLMinify;
    public javax.swing.JCheckBox buildInternalCSSMinify;
    public javax.swing.JCheckBox buildInternalJSMinify;
    public javax.swing.JCheckBox buildJSMinify;
    public javax.swing.JCheckBox buildJSONMinify;
    public javax.swing.JCheckBox buildXMLMinify;
    private javax.swing.JPanel cssTabPanel;
    public javax.swing.JCheckBox enableOutputLogAlert;
    public javax.swing.JCheckBox enableShortKeyAction;
    public javax.swing.JCheckBox enableShortKeyActionConfirmBox;
    protected javax.swing.JEditorPane headerEditorPaneCSS1;
    protected javax.swing.JEditorPane headerEditorPaneHTML;
    protected javax.swing.JEditorPane headerEditorPaneJS1;
    protected javax.swing.JEditorPane headerEditorPaneJSON;
    protected javax.swing.JEditorPane headerEditorPaneXML;
    private javax.swing.JLabel headerLabelCSS1;
    private javax.swing.JLabel headerLabelHTML;
    private javax.swing.JLabel headerLabelJS1;
    private javax.swing.JLabel headerLabelJSON;
    private javax.swing.JLabel headerLabelXML;
    private javax.swing.JLayeredPane headerPaneCSS1;
    private javax.swing.JLayeredPane headerPaneHTML;
    private javax.swing.JLayeredPane headerPaneJS1;
    private javax.swing.JLayeredPane headerPaneJSON;
    private javax.swing.JLayeredPane headerPaneXML;
    private javax.swing.JScrollPane headerScrollPaneCSS1;
    private javax.swing.JScrollPane headerScrollPaneHTML;
    private javax.swing.JScrollPane headerScrollPaneJS1;
    private javax.swing.JScrollPane headerScrollPaneJSON;
    private javax.swing.JScrollPane headerScrollPaneXML;
    private javax.swing.JPanel htmlTabPanel;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane10;
    private javax.swing.JLayeredPane jLayeredPane6;
    private javax.swing.JLayeredPane jLayeredPane8;
    private javax.swing.JPanel javaScriptTabPanel;
    public javax.swing.JCheckBox jsObfuscate1;
    private javax.swing.JPanel jsonTabPanel;
    private javax.swing.JTabbedPane minifierTabPane;
    public javax.swing.JCheckBox newCSSFile1;
    public javax.swing.JCheckBox newHTMLFile;
    public javax.swing.JCheckBox newJSFile1;
    public javax.swing.JCheckBox newJSONFile;
    public javax.swing.JCheckBox newXMLFile;
    public javax.swing.JTextField preExtensionCSS1;
    public javax.swing.JLabel preExtensionCSS_Label1;
    public javax.swing.JTextField preExtensionHTML;
    public javax.swing.JLabel preExtensionHTML_Label;
    public javax.swing.JTextField preExtensionJS1;
    public javax.swing.JTextField preExtensionJSON;
    public javax.swing.JLabel preExtensionJSON_Label;
    public javax.swing.JLabel preExtensionJS_Label1;
    public javax.swing.JTextField preExtensionXML;
    public javax.swing.JLabel preExtensionXML_Label;
    private javax.swing.JPanel projectBuildTabPanel;
    public javax.swing.JCheckBox separatBuild;
    public javax.swing.JTextField separatorCSS1;
    public javax.swing.JLabel separatorCSS_Label1;
    public javax.swing.JTextField separatorHTML;
    public javax.swing.JLabel separatorHTML_Label;
    public javax.swing.JTextField separatorJS1;
    public javax.swing.JTextField separatorJSON;
    public javax.swing.JLabel separatorJSON_Label;
    public javax.swing.JLabel separatorJS_Label1;
    public javax.swing.JTextField separatorXML;
    public javax.swing.JLabel separatorXML_Label;
    public javax.swing.JCheckBox skipPreExtensionCSS;
    public javax.swing.JCheckBox skipPreExtensionHTML;
    public javax.swing.JCheckBox skipPreExtensionJS;
    public javax.swing.JCheckBox skipPreExtensionJSON;
    public javax.swing.JCheckBox skipPreExtensionXML;
    private javax.swing.JPanel xmlTabPanel;
    // End of variables declaration//GEN-END:variables
}
